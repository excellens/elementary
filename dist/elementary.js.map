{"version":3,"file":"elementary.js","sources":["../src/Elementary/Base.js","../src/Elementary/Collection.js","../src/Elementary/Observe.js","../src/Elementary/Element.js","../src/Elementary/Component.js","../src/Main.js"],"sourcesContent":["/*\r\n * MIT License\r\n * Copyright (c) 2020 Excellens\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\n/**\r\n * Visit each property of an object.\r\n *\r\n * @param {Object}      object\r\n * @param {function}    callback\r\n * @param {boolean}     hierarchy\r\n */\r\nexport function Visit(object, callback, hierarchy) {\r\n    for (const property in object) {\r\n        if (!hierarchy && !object.hasOwnProperty(property)) {\r\n            continue;\r\n        }\r\n        callback(property, object[property]);\r\n    }\r\n}\r\n\r\n/**\r\n * Merge self-context into an object and bind any function to the object.\r\n *\r\n * @param {Object}      self\r\n * @param {Object}      object\r\n */\r\nexport function Merge(self, object) {\r\n    Visit(self, function (property, propertyValue) {\r\n        if (typeof propertyValue === 'function') {\r\n            object[property] = propertyValue.bind(object);\r\n        } else {\r\n            object[property] = propertyValue;\r\n        }\r\n    }, true);\r\n    return object;\r\n}\r\n","/*\r\n * MIT License\r\n * Copyright (c) 2020 Excellens\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\nimport {Merge} from \"./Base\";\r\n\r\nexport function Collection(list) {\r\n    const self = {};\r\n\r\n    this.list = !!list\r\n        ? list\r\n        : [];\r\n\r\n    this.add = function (index, value) {\r\n        // Special case, where no index is given, but only the value.\r\n        if ('undefined' === typeof value) {\r\n            value = index;\r\n            index = this.list.length;\r\n        }\r\n\r\n        return this.set(index, value);\r\n    };\r\n\r\n    this.remove = function (index, value) {\r\n        // Special case, where no index is given, but only the value.\r\n        if ('undefined' === typeof value) {\r\n            value = index;\r\n            index = this.list.indexOf(value, 0);\r\n        }\r\n\r\n        // Discard the value.\r\n        this.list.splice(index, 1);\r\n\r\n        return this;\r\n    };\r\n\r\n    this.get = function (index) {\r\n        return this.has(index)\r\n            ? this.list[index]\r\n            : null;\r\n    };\r\n\r\n    this.set = function (index, value) {\r\n        this.list[index] = value;\r\n\r\n        return this;\r\n    };\r\n\r\n    this.has = function (index) {\r\n        return 'undefined' !== typeof this.list[index];\r\n    };\r\n\r\n    this.each = function (callback) {\r\n        for (let i = 0, j = this.list.length; i < j; i++) {\r\n            callback(this.list[i], i);\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n    this.push = function (value) {\r\n        this.list[this.list.length] = value;\r\n\r\n        return this;\r\n    };\r\n\r\n    this.pop = function () {\r\n        const index = this.list.length - 1;\r\n        if (0 > index) {\r\n            return null;\r\n        }\r\n\r\n        const value = this.list[index];\r\n\r\n        this.list.length = index;\r\n\r\n        return value;\r\n    };\r\n\r\n    this.size = function () {\r\n        return this.list.length;\r\n    };\r\n\r\n    this.clear = function () {\r\n        this.list.length = 0;\r\n\r\n        return this;\r\n    };\r\n\r\n    return Merge(this, self);\r\n}\r\n\r\nexport function CollectionMap(list) {\r\n    const self = {};\r\n\r\n    this.list = !!list\r\n        ? list\r\n        : {};\r\n\r\n    this.add = function (key, value) {\r\n        return this.set(key, value);\r\n    };\r\n\r\n    this.remove = function (key) {\r\n        if (this.list.hasOwnProperty(key)) {\r\n            delete this.list[key];\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n    this.get = function (key) {\r\n        return this.has(key)\r\n            ? this.list[key]\r\n            : null;\r\n    };\r\n\r\n    this.set = function (key, value) {\r\n        this.list[key] = value;\r\n\r\n        return this;\r\n    };\r\n\r\n    this.has = function (key, strict) {\r\n        // Special case, where strict is not set, but it should be true.\r\n        if ('undefined' === typeof strict) {\r\n            strict = true;\r\n        }\r\n\r\n        return strict\r\n            ? this.list.hasOwnProperty(key)\r\n            : key in this.list;\r\n    };\r\n\r\n    this.each = function (callback) {\r\n        for (let k in this.list) {\r\n            if (!this.list.hasOwnProperty(k)) {\r\n                continue;\r\n            }\r\n\r\n            callback(this.list[k], k);\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n    this.clear = function () {\r\n        for (let k in this.list) {\r\n            if (!this.list.hasOwnProperty(k)) {\r\n                continue;\r\n            }\r\n\r\n            delete this.list[k];\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n    return Merge(this, self);\r\n}\r\n","/*\r\n * MIT License\r\n * Copyright (c) 2020 Excellens\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\nimport {Merge} from \"./Base\";\r\nimport {Collection} from \"./Collection\";\r\n\r\nexport function Callback(id, callback) {\r\n    const self = {};\r\n\r\n    this.id = !!id\r\n        ? id\r\n        : null;\r\n    this.callback = callback;\r\n\r\n    this.getId = function () {\r\n        return this.id;\r\n    };\r\n\r\n    this.setId = function (id) {\r\n        this.id = id;\r\n        return this;\r\n    };\r\n\r\n    this.hasId = function () {\r\n        return null !== this.id;\r\n    };\r\n\r\n    this.update = function (subject) {\r\n        this.callback(subject, this.id);\r\n        return this;\r\n    };\r\n\r\n    return Merge(this, self);\r\n}\r\n\r\nexport function Subject() {\r\n    const self = {};\r\n\r\n    this.callbackCollection = new Collection();\r\n\r\n    this.attachCallback = function (callback) {\r\n        this.callbackCollection.add(callback);\r\n        return this;\r\n    };\r\n\r\n    this.detachCallback = function (callback) {\r\n        this.callbackCollection.remove(callback);\r\n        return this;\r\n    };\r\n\r\n    this.notify = function () {\r\n        const subject = this;\r\n\r\n        this.callbackCollection.each(function (value, index) {\r\n            value.update(subject);\r\n        });\r\n\r\n        return this;\r\n    };\r\n\r\n    return Merge(this, self);\r\n}\r\n","/*\r\n * MIT License\r\n * Copyright (c) 2020 Excellens\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\nimport {Merge} from \"./Base\";\r\n\r\n/**\r\n * Assert the element tag-name is equal to the element-name.\r\n *\r\n * @param {Object}  element\r\n * @param {string}  elementName\r\n * @returns {boolean}\r\n */\r\nfunction assertType(element, elementName) {\r\n    if (element.tagName.toUpperCase() === elementName.toUpperCase()) {\r\n        return true;\r\n    }\r\n\r\n    throw 'ERR_ELEMENT_NAME';\r\n}\r\n\r\nexport function Element(document, elementName, element) {\r\n    const self = (function (document, elementName, element) {\r\n        element = !!element\r\n            ? element\r\n            : document.createElement(elementName);\r\n\r\n        assertType(element, elementName);\r\n\r\n        return element;\r\n    }(document, elementName, element));\r\n\r\n    return Merge(this, self);\r\n}\r\n","/*\r\n * MIT License\r\n * Copyright (c) 2020 Excellens\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\nimport {Merge} from \"./Base\";\r\nimport {Element} from \"./Element\";\r\nimport {Callback, Subject} from \"./Observe\";\r\n\r\nexport function Component(presenter, document, elementName, element) {\r\n    const self = new Element(document, elementName, element);\r\n\r\n    this.presenter = presenter;\r\n\r\n    this.initialize = function () {\r\n        this.presenter.initialize(this);\r\n\r\n        return this;\r\n    };\r\n\r\n    this.destroy = function () {\r\n        this.presenter.destroy();\r\n\r\n        return this;\r\n    };\r\n\r\n    return Merge(this, self);\r\n}\r\n\r\nexport function ComponentPresenter(state) {\r\n    const self = {};\r\n\r\n    this.state = state;\r\n\r\n    this.update = function (state, id) {\r\n        throw 'ERR_COMPONENT_UPDATE';\r\n    };\r\n\r\n    let callback = null;\r\n\r\n    this.component = null;\r\n\r\n    this.initialize = function (component) {\r\n        this.component = component;\r\n\r\n        callback = new Callback('ComponentPresenter', this.update);\r\n        this.state.attachCallback(callback);\r\n        this.state.notify();\r\n\r\n        return this;\r\n    };\r\n\r\n    this.destroy = function () {\r\n        this.component = null;\r\n\r\n        this.state.detachCallback(callback);\r\n        callback = null;\r\n\r\n        return this;\r\n    };\r\n\r\n    return Merge(this, self);\r\n}\r\n\r\nexport function ComponentState() {\r\n    const self = new Subject();\r\n\r\n    return Merge(this, self);\r\n}\r\n","/*\r\n * MIT License\r\n * Copyright (c) 2020 Excellens\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\nexport * as Base from \"./Elementary/Base\";\r\nexport * as Collection from \"./Elementary/Collection\"\r\nexport * as Observe from \"./Elementary/Observe\"\r\nexport * as Element from \"./Elementary/Element\"\r\nexport * as Component from \"./Elementary/Component\"\r\n\r\nimport {version} from '../package.json';\r\n\r\nexport const metadata = {\r\n    version: version,\r\n};\r\n"],"names":["Visit","object","callback","hierarchy","property","hasOwnProperty","Merge","self","propertyValue","bind","Collection","list","this","add","index","value","length","set","remove","indexOf","splice","get","has","each","i","j","push","pop","size","clear","CollectionMap","key","strict","k","Callback","id","getId","setId","hasId","update","subject","Subject","callbackCollection","attachCallback","detachCallback","notify","assertType","element","elementName","tagName","toUpperCase","Element","document","createElement","Component","presenter","initialize","destroy","ComponentPresenter","state","component","ComponentState","metadata","version"],"mappings":"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"}